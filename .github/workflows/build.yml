name: Build and Release

on:
  release:
    types: [created]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version tag
        id: get_version
        run: |
          echo $(echo $GITHUB_REF | sed 's/refs\/tags\///')
          echo "version=$(echo $GITHUB_REF | sed 's/refs\/tags\///')" >> $GITHUB_OUTPUT
      - name: Get version count
        id: get_version_count
        run: |
          echo $(( $(git tag --list | wc -l) + 1 ))
          echo "version_count=$(( $(git tag --list | wc -l) + 1 ))" >> $GITHUB_OUTPUT

      - name: Set versions in Gradle file
        run: |
          sed -i "s/versionCode [0-9]\+/versionCode ${{ steps.get_version_count.outputs.version_count }}/" android/app/build.gradle
          sed -i "s/versionName \".*\"/versionName \"${{ steps.get_version.outputs.version }}\"/" android/app/build.gradle
          cat android/app/build.gradle

      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 19.x

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm i

      - name: Build web app
        run: pnpm build

      - name: Build app bundle
        run: cd android && ./gradlew bundle && ./gradlew assembleDebug

      - name: Extract Android signing key from env
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" > android/release.jks.base64
          base64 -d android/release.jks.base64 > android/release.jks

      - name: Sign dev build
        run: jarsigner -keystore android/release.jks -storepass "${{ secrets.RELEASE_KEYSTORE_PASSWORD }}" -signedjar ./android/app/build/outputs/bundle/release/app-release-signed.aab ./android/app/build/outputs/bundle/release/app-release.aab release

      - name: List release files
        run: ls ./android/app/build/outputs/bundle/release

      - name: Upload APK to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ./android/app/build/outputs/apk/debug/app-debug.apk

      - name: Upload AAB to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-release-signed
          path: ./android/app/build/outputs/bundle/release/app-release-signed.aab

      - uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          releaseName: ${{ steps.get_version.outputs.version }}
          packageName: me.scolastico.dyn.redirect
          releaseFiles: |
            ./android/app/build/outputs/bundle/release/app-release-signed.aab
